{"ast":null,"code":"var _jsxFileName = \"F:\\\\3rd semester\\\\OCRcompiler\\\\Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [selectedImage, setSelectedImage] = useState(null);\n  const [data, setData] = useState([{}]);\n\n  // const onchangeHandler = (e) => {\n  //   setSelectedImage(e.target.files[0]);\n  // };\n\n  // const convertImageToText = async () => {\n  //   if (!selectedImage) return;\n  //   Tesseract.recognize(selectedImage, \"eng\", {\n  //     logger: (m) => console.log(m),\n  //   }).then(({ data: { text } }) => {\n  //     setData(text);\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   convertImageToText();\n  // }, [selectedImage]);\n\n  useEffect(() => {\n    fetch(\"/ocr\").then(res => res.json()).then(data => {\n      setData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: typeofdata.ocr == \"undefined\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 12\n        }, this) : data.ocr.map((ocr, i) => /*#__PURE__*/_jsxDEV(\"p\", {}, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"odp7ftN9IDg1xewk47EaAZiwHYc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","data","setData","fetch","then","res","json","className","children","typeofdata","ocr","fileName","_jsxFileName","lineNumber","columnNumber","map","i","_c","$RefreshReg$"],"sources":["F:/3rd semester/OCRcompiler/Client/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  // const [selectedImage, setSelectedImage] = useState(null);\r\n  const [data, setData] = useState([{}]);\r\n\r\n  // const onchangeHandler = (e) => {\r\n  //   setSelectedImage(e.target.files[0]);\r\n  // };\r\n\r\n  // const convertImageToText = async () => {\r\n  //   if (!selectedImage) return;\r\n  //   Tesseract.recognize(selectedImage, \"eng\", {\r\n  //     logger: (m) => console.log(m),\r\n  //   }).then(({ data: { text } }) => {\r\n  //     setData(text);\r\n  //   });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   convertImageToText();\r\n  // }, [selectedImage]);\r\n\r\n  useEffect(()=>{\r\n    fetch(\"/ocr\").then(\r\n      res=>res.json()\r\n    ).then(\r\n      data=>{\r\n        setData(data)\r\n      }\r\n    )\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <div className=\"input-section\">\r\n        <input type=\"file\" accept=\"image/*\" onChange={onchangeHandler}></input>\r\n      </div> */}\r\n      <div className=\"output-section\">\r\n        {/* <div className=\"image-view\">\r\n          {selectedImage && (\r\n            <img src={URL.createObjectURL(selectedImage)} id=\"inputImg\"></img>\r\n          )}\r\n        </div> */}\r\n        <div className=\"result\">\r\n          {(typeofdata.ocr==\"undefined\")?\r\n          (<p>loading...</p>):\r\n          (data.ocr.map((ocr,i)=>(<p key={i}></p>)))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEtC;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAI;IACZQ,KAAK,CAAC,MAAM,CAAC,CAACC,IAAI,CAChBC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAChB,CAAC,CAACF,IAAI,CACJH,IAAI,IAAE;MACJC,OAAO,CAACD,IAAI,CAAC;IACf,CACF,CAAC;EACH,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEH,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,eAIlBV,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAM7BV,OAAA;QAAKS,SAAS,EAAC,QAAQ;QAAAC,QAAA,EACnBC,UAAU,CAACC,GAAG,IAAE,WAAW,gBAC5BZ,OAAA;UAAAU,QAAA,EAAG;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GACjBb,IAAI,CAACS,GAAG,CAACK,GAAG,CAAC,CAACL,GAAG,EAACM,CAAC,kBAAIlB,OAAA,UAAQkB,CAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAlDQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}